{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\smart-grocery-react-test\\\\src\\\\MealPlanTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MealCard from './MealCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlanTab = ({\n  mockRecipes,\n  showMessage,\n  setActiveTab\n}) => {\n  _s();\n  const [mealInput, setMealInput] = useState('');\n  const [selectedMeals, setSelectedMeals] = useState([]);\n  const [pantryItems, setPantryItems] = useState([]);\n  const [pantryInput, setPantryInput] = useState('');\n  const [dietaryPreferences, setDietaryPreferences] = useState({\n    vegetarian: false,\n    vegan: false,\n    'gluten-free': false,\n    'dairy-free': false,\n    'nut-free': false\n  });\n  const [mealSuggestions, setMealSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const normalizeIngredientName = name => {\n    return name.toLowerCase().replace(/s$/, '').replace(/(\\s*(diced|chopped|sliced|fresh|canned|dried|ground))\\s*/g, '');\n  };\n  const capitalizeWords = str => {\n    return str.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  useEffect(() => {\n    if (mealInput.length > 0) {\n      const selectedDiets = Object.keys(dietaryPreferences).filter(diet => dietaryPreferences[diet]);\n      const filtered = mockRecipes.filter(recipe => {\n        const matchesName = recipe.name.toLowerCase().includes(mealInput.toLowerCase());\n        const matchesDiet = selectedDiets.every(diet => recipe.dietary.includes(diet));\n        const notSelected = !selectedMeals.some(m => m.recipe.id === recipe.id);\n        return matchesName && matchesDiet && notSelected;\n      });\n      setMealSuggestions(filtered);\n      setShowSuggestions(filtered.length > 0);\n    } else {\n      setMealSuggestions([]);\n      setShowSuggestions(false);\n    }\n  }, [mealInput, dietaryPreferences, selectedMeals]);\n  const addMealToSelection = recipe => {\n    if (selectedMeals.some(m => m.recipe.id === recipe.id)) {\n      showMessage('Already Added', `${recipe.name} is already in your meal plan.`);\n      return;\n    }\n    setSelectedMeals([...selectedMeals, {\n      recipe,\n      servings: recipe.servings || 4\n    }]);\n    setMealInput('');\n    setShowSuggestions(false);\n  };\n  const removeMeal = id => {\n    setSelectedMeals(selectedMeals.filter(m => m.recipe.id !== id));\n  };\n  const updateServings = (id, servings) => {\n    setSelectedMeals(selectedMeals.map(m => m.recipe.id === id ? {\n      ...m,\n      servings\n    } : m));\n  };\n  const addPantryItem = () => {\n    const itemText = pantryInput.trim();\n    if (itemText) {\n      const normalizedItem = normalizeIngredientName(itemText);\n      if (!pantryItems.includes(normalizedItem)) {\n        setPantryItems([...pantryItems, normalizedItem]);\n      } else {\n        showMessage('Already in Pantry', `${capitalizeWords(itemText)} is already in your pantry.`);\n      }\n      setPantryInput('');\n    }\n  };\n  const removePantryItem = item => {\n    setPantryItems(pantryItems.filter(i => i !== item));\n  };\n  const handleDietaryChange = diet => {\n    setDietaryPreferences({\n      ...dietaryPreferences,\n      [diet]: !dietaryPreferences[diet]\n    });\n  };\n  const generateGroceryList = () => {\n    if (selectedMeals.length === 0) {\n      showMessage('No Meals Selected', 'Please select at least one meal to generate a grocery list.');\n      return;\n    }\n    setActiveTab('grocery-list');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"meal-plan-content\",\n    className: \"tab-content\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"p-6 bg-blue-50 rounded-xl shadow-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-blue-800 mb-6\",\n        children: \"Your Meal Plan & Pantry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mealInput\",\n          className: \"block text-lg font-medium text-gray-700 mb-2\",\n          children: \"Search/Add Meals:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"mealInput\",\n            value: mealInput,\n            onChange: e => setMealInput(e.target.value),\n            onFocus: () => setShowSuggestions(mealSuggestions.length > 0),\n            placeholder: \"e.g., Chicken Alfredo, Lentil Soup\",\n            className: \"w-full p-3 pr-10 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"addMealBtn\",\n            className: \"absolute inset-y-0 right-0 flex items-center px-4 text-blue-600 hover:text-blue-800\",\n            onClick: () => {\n              const recipe = mockRecipes.find(r => r.name.toLowerCase() === mealInput.toLowerCase());\n              if (recipe) {\n                addMealToSelection(recipe);\n              } else if (mealInput) {\n                showMessage('Meal Not Found', `\"${capitalizeWords(mealInput)}\" was not found in our recipe list.`);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-6 h-6\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"mealSuggestions\",\n            className: \"absolute z-10 w-full bg-white border border-gray-200 rounded-lg shadow-lg mt-1 max-h-60 overflow-y-auto\",\n            children: mealSuggestions.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 hover:bg-blue-50 cursor-pointer rounded-md flex items-center\",\n              onClick: () => addMealToSelection(recipe),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: recipe.image,\n                alt: recipe.name,\n                className: \"w-10 h-10 rounded-full mr-3 object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-800\",\n                children: recipe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)]\n            }, recipe.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"selectedMealsContainer\",\n          className: \"mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: selectedMeals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-center col-span-full\",\n            children: \"No meals added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this) : selectedMeals.map(({\n            recipe,\n            servings\n          }) => /*#__PURE__*/_jsxDEV(MealCard, {\n            recipe: recipe,\n            servings: servings,\n            onRemove: removeMeal,\n            onServingsChange: updateServings\n          }, recipe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-lg font-medium text-gray-700 mb-2\",\n          children: \"Dietary Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"dietaryPreferences\",\n          className: \"flex flex-wrap gap-4\",\n          children: Object.keys(dietaryPreferences).map(diet => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: dietaryPreferences[diet],\n              onChange: () => handleDietaryChange(diet),\n              className: \"checkbox-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), capitalizeWords(diet)]\n          }, diet, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pantryInput\",\n          className: \"block text-lg font-medium text-gray-700 mb-2\",\n          children: \"What's in your Pantry?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pantryInput\",\n            value: pantryInput,\n            onChange: e => setPantryInput(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && addPantryItem(),\n            placeholder: \"e.g., eggs, milk, pasta\",\n            className: \"flex-grow p-3 border border-gray-300 rounded-l-lg focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"addPantryItemBtn\",\n            className: \"btn-primary rounded-l-none\",\n            onClick: addPantryItem,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"pantryList\",\n          className: \"mt-3 flex flex-wrap gap-2\",\n          children: pantryItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Your pantry is empty. Add some ingredients!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this) : pantryItems.map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-flex items-center bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full shadow-sm\",\n            children: [capitalizeWords(item), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ml-2 text-blue-600 hover:text-blue-900\",\n              onClick: () => removePantryItem(item),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: \"2\",\n                  d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"generateListBtn\",\n          className: \"btn-primary w-full md:w-auto px-12 py-3 text-xl\",\n          onClick: generateGroceryList,\n          children: \"Generate Grocery List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(MealPlanTab, \"3gdG4C/3CuRSSSAHEqfYs/bZk0Q=\");\n_c = MealPlanTab;\nexport default MealPlanTab;\nvar _c;\n$RefreshReg$(_c, \"MealPlanTab\");","map":{"version":3,"names":["React","useState","useEffect","MealCard","jsxDEV","_jsxDEV","MealPlanTab","mockRecipes","showMessage","setActiveTab","_s","mealInput","setMealInput","selectedMeals","setSelectedMeals","pantryItems","setPantryItems","pantryInput","setPantryInput","dietaryPreferences","setDietaryPreferences","vegetarian","vegan","mealSuggestions","setMealSuggestions","showSuggestions","setShowSuggestions","normalizeIngredientName","name","toLowerCase","replace","capitalizeWords","str","split","map","word","charAt","toUpperCase","slice","join","length","selectedDiets","Object","keys","filter","diet","filtered","recipe","matchesName","includes","matchesDiet","every","dietary","notSelected","some","m","id","addMealToSelection","servings","removeMeal","updateServings","addPantryItem","itemText","trim","normalizedItem","removePantryItem","item","i","handleDietaryChange","generateGroceryList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","onFocus","placeholder","onClick","find","r","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","src","image","alt","onRemove","onServingsChange","checked","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/Owner/smart-grocery-react-test/src/MealPlanTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MealCard from './MealCard';\r\n\r\nconst MealPlanTab = ({ mockRecipes, showMessage, setActiveTab }) => {\r\n  const [mealInput, setMealInput] = useState('');\r\n  const [selectedMeals, setSelectedMeals] = useState([]);\r\n  const [pantryItems, setPantryItems] = useState([]);\r\n  const [pantryInput, setPantryInput] = useState('');\r\n  const [dietaryPreferences, setDietaryPreferences] = useState({\r\n    vegetarian: false,\r\n    vegan: false,\r\n    'gluten-free': false,\r\n    'dairy-free': false,\r\n    'nut-free': false\r\n  });\r\n  const [mealSuggestions, setMealSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  const normalizeIngredientName = (name) => {\r\n    return name.toLowerCase()\r\n      .replace(/s$/, '')\r\n      .replace(/(\\s*(diced|chopped|sliced|fresh|canned|dried|ground))\\s*/g, '');\r\n  };\r\n\r\n  const capitalizeWords = (str) => {\r\n    return str.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mealInput.length > 0) {\r\n      const selectedDiets = Object.keys(dietaryPreferences)\r\n        .filter(diet => dietaryPreferences[diet]);\r\n      \r\n      const filtered = mockRecipes.filter(recipe => {\r\n        const matchesName = recipe.name.toLowerCase().includes(mealInput.toLowerCase());\r\n        const matchesDiet = selectedDiets.every(diet => recipe.dietary.includes(diet));\r\n        const notSelected = !selectedMeals.some(m => m.recipe.id === recipe.id);\r\n        return matchesName && matchesDiet && notSelected;\r\n      });\r\n      \r\n      setMealSuggestions(filtered);\r\n      setShowSuggestions(filtered.length > 0);\r\n    } else {\r\n      setMealSuggestions([]);\r\n      setShowSuggestions(false);\r\n    }\r\n  }, [mealInput, dietaryPreferences, selectedMeals]);\r\n\r\n  const addMealToSelection = (recipe) => {\r\n    if (selectedMeals.some(m => m.recipe.id === recipe.id)) {\r\n      showMessage('Already Added', `${recipe.name} is already in your meal plan.`);\r\n      return;\r\n    }\r\n\r\n    setSelectedMeals([...selectedMeals, { recipe, servings: recipe.servings || 4 }]);\r\n    setMealInput('');\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  const removeMeal = (id) => {\r\n    setSelectedMeals(selectedMeals.filter(m => m.recipe.id !== id));\r\n  };\r\n\r\n  const updateServings = (id, servings) => {\r\n    setSelectedMeals(selectedMeals.map(m => \r\n      m.recipe.id === id ? { ...m, servings } : m\r\n    ));\r\n  };\r\n\r\n  const addPantryItem = () => {\r\n    const itemText = pantryInput.trim();\r\n    if (itemText) {\r\n      const normalizedItem = normalizeIngredientName(itemText);\r\n      if (!pantryItems.includes(normalizedItem)) {\r\n        setPantryItems([...pantryItems, normalizedItem]);\r\n      } else {\r\n        showMessage('Already in Pantry', `${capitalizeWords(itemText)} is already in your pantry.`);\r\n      }\r\n      setPantryInput('');\r\n    }\r\n  };\r\n\r\n  const removePantryItem = (item) => {\r\n    setPantryItems(pantryItems.filter(i => i !== item));\r\n  };\r\n\r\n  const handleDietaryChange = (diet) => {\r\n    setDietaryPreferences({\r\n      ...dietaryPreferences,\r\n      [diet]: !dietaryPreferences[diet]\r\n    });\r\n  };\r\n\r\n  const generateGroceryList = () => {\r\n    if (selectedMeals.length === 0) {\r\n      showMessage('No Meals Selected', 'Please select at least one meal to generate a grocery list.');\r\n      return;\r\n    }\r\n    setActiveTab('grocery-list');\r\n  };\r\n\r\n  return (\r\n    <div id=\"meal-plan-content\" className=\"tab-content\">\r\n      <section className=\"p-6 bg-blue-50 rounded-xl shadow-inner\">\r\n        <h2 className=\"text-2xl font-bold text-blue-800 mb-6\">Your Meal Plan & Pantry</h2>\r\n\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"mealInput\" className=\"block text-lg font-medium text-gray-700 mb-2\">Search/Add Meals:</label>\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"mealInput\"\r\n              value={mealInput}\r\n              onChange={(e) => setMealInput(e.target.value)}\r\n              onFocus={() => setShowSuggestions(mealSuggestions.length > 0)}\r\n              placeholder=\"e.g., Chicken Alfredo, Lentil Soup\"\r\n              className=\"w-full p-3 pr-10 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n            <button\r\n              id=\"addMealBtn\"\r\n              className=\"absolute inset-y-0 right-0 flex items-center px-4 text-blue-600 hover:text-blue-800\"\r\n              onClick={() => {\r\n                const recipe = mockRecipes.find(r => \r\n                  r.name.toLowerCase() === mealInput.toLowerCase()\r\n                );\r\n                if (recipe) {\r\n                  addMealToSelection(recipe);\r\n                } else if (mealInput) {\r\n                  showMessage('Meal Not Found', `\"${capitalizeWords(mealInput)}\" was not found in our recipe list.`);\r\n                }\r\n              }}\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n              </svg>\r\n            </button>\r\n            {showSuggestions && (\r\n              <div id=\"mealSuggestions\" className=\"absolute z-10 w-full bg-white border border-gray-200 rounded-lg shadow-lg mt-1 max-h-60 overflow-y-auto\">\r\n                {mealSuggestions.map(recipe => (\r\n                  <div\r\n                    key={recipe.id}\r\n                    className=\"p-3 hover:bg-blue-50 cursor-pointer rounded-md flex items-center\"\r\n                    onClick={() => addMealToSelection(recipe)}\r\n                  >\r\n                    <img src={recipe.image} alt={recipe.name} className=\"w-10 h-10 rounded-full mr-3 object-cover\" />\r\n                    <span className=\"font-medium text-gray-800\">{recipe.name}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div id=\"selectedMealsContainer\" className=\"mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {selectedMeals.length === 0 ? (\r\n              <p className=\"text-gray-500 text-center col-span-full\">No meals added yet.</p>\r\n            ) : (\r\n              selectedMeals.map(({ recipe, servings }) => (\r\n                <MealCard\r\n                  key={recipe.id}\r\n                  recipe={recipe}\r\n                  servings={servings}\r\n                  onRemove={removeMeal}\r\n                  onServingsChange={updateServings}\r\n                />\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-lg font-medium text-gray-700 mb-2\">Dietary Preferences:</label>\r\n          <div id=\"dietaryPreferences\" className=\"flex flex-wrap gap-4\">\r\n            {Object.keys(dietaryPreferences).map(diet => (\r\n              <label key={diet} className=\"checkbox-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={dietaryPreferences[diet]}\r\n                  onChange={() => handleDietaryChange(diet)}\r\n                  className=\"checkbox-input\"\r\n                />\r\n                {capitalizeWords(diet)}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"pantryInput\" className=\"block text-lg font-medium text-gray-700 mb-2\">What's in your Pantry?</label>\r\n          <div className=\"flex\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"pantryInput\"\r\n              value={pantryInput}\r\n              onChange={(e) => setPantryInput(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && addPantryItem()}\r\n              placeholder=\"e.g., eggs, milk, pasta\"\r\n              className=\"flex-grow p-3 border border-gray-300 rounded-l-lg focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n            <button\r\n              id=\"addPantryItemBtn\"\r\n              className=\"btn-primary rounded-l-none\"\r\n              onClick={addPantryItem}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div id=\"pantryList\" className=\"mt-3 flex flex-wrap gap-2\">\r\n            {pantryItems.length === 0 ? (\r\n              <p className=\"text-gray-500\">Your pantry is empty. Add some ingredients!</p>\r\n            ) : (\r\n              pantryItems.map(item => (\r\n                <span key={item} className=\"inline-flex items-center bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full shadow-sm\">\r\n                  {capitalizeWords(item)}\r\n                  <button\r\n                    className=\"ml-2 text-blue-600 hover:text-blue-900\"\r\n                    onClick={() => removePantryItem(item)}\r\n                  >\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                    </svg>\r\n                  </button>\r\n                </span>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center\">\r\n          <button\r\n            id=\"generateListBtn\"\r\n            className=\"btn-primary w-full md:w-auto px-12 py-3 text-xl\"\r\n            onClick={generateGroceryList}\r\n          >\r\n            Generate Grocery List\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealPlanTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}